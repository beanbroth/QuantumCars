// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
// </auto-generated>

namespace Quantum.Editor {
  using Quantum;
  using UnityEngine;
  using UnityEditor;

  [CustomPropertyDrawer(typeof(AssetRefAIConfig))]
  public class AssetRefAIConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(AIConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefGameConfig))]
  public class AssetRefGameConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(GameConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefGraph))]
  public class AssetRefGraphPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(GraphAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefMapCustomData))]
  public class AssetRefMapCustomDataPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(MapCustomDataAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefVehicleController3DConfig))]
  public class AssetRefVehicleController3DConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(VehicleController3DConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefWheelControllerConfig))]
  public class AssetRefWheelControllerConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(WheelControllerConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(Quantum.Prototypes.GameState_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.InputButtons_Prototype))]
  partial class PrototypeDrawer {}
}
